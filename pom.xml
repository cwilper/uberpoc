<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
 
    <groupId>org.example</groupId>
    <artifactId>uberpoc</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
 
    <properties>
        <lib.guava.version>18.0</lib.guava.version>
        <lib.h2.version>1.4.187</lib.h2.version>
        <lib.handlebars-java.version>2.2.0</lib.handlebars-java.version>
        <lib.junit.version>4.11</lib.junit.version>
        <lib.logback.version>1.1.3</lib.logback.version>
        <lib.lombok.version>1.16.4</lib.lombok.version>
        <lib.maven-compiler-plugin.version>3.3</lib.maven-compiler-plugin.version>
        <lib.maven-dependency-plugin.version>2.10</lib.maven-dependency-plugin.version>
        <lib.maven-enforcer-plugin.version>1.4</lib.maven-enforcer-plugin.version>
        <lib.slf4j.version>1.7.12</lib.slf4j.version>
        <lib.sass-maven-plugin.version>2.6</lib.sass-maven-plugin.version>
        <lib.spring.version>4.1.6.RELEASE</lib.spring.version>
        <lib.spring-boot.version>1.2.3.RELEASE</lib.spring-boot.version>

        <!-- IMPORTANT: When updating/adding/removing webjars, you must also update base.hbs and wro.xml. -->
        <lib.webjar-bootstrap.version>3.3.1</lib.webjar-bootstrap.version>
        <lib.webjar-bootstrap-sass.version>3.3.1-1</lib.webjar-bootstrap-sass.version>
        <lib.webjar-jquery.version>2.1.4</lib.webjar-jquery.version>

        <lib.wro4j-maven-plugin.version>1.7.8</lib.wro4j-maven-plugin.version>

        <live-server.debug-port>5005</live-server.debug-port>
        <live-server.http-port>8080</live-server.http-port>

        <!-- change to production to activate settings in application-production.properties during spring-boot:run -->
        <live-server.profiles>default</live-server.profiles>

        <min.java.version>1.8</min.java.version>
        <min.maven.version>3.3.1</min.maven.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${lib.logback.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${lib.h2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars-jackson2</artifactId>
            <version>${lib.handlebars-java.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars-springmvc</artifactId>
            <version>${lib.handlebars-java.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${lib.guava.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${lib.junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lib.lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${lib.slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${lib.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${lib.spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${lib.spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${lib.spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${lib.spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap-sass</artifactId>
            <version>${lib.webjar-bootstrap-sass.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${lib.webjar-bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${lib.webjar-jquery.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${lib.maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${min.java.version}</source>
                    <target>${min.java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${lib.maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>org.webjars</includeGroupIds>
                            <outputDirectory>${project.build.directory}/webjars</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
             Note: As they bound to the generate-resources phase, this must
             be listed after the plugin above to ensure it runs afterward.
            --> <plugin>
                <groupId>nl.geodienstencentrum.maven</groupId>
                <artifactId>sass-maven-plugin</artifactId>
                <version>${lib.sass-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>update-stylesheets</goal>
                            <!-- TODO: Consider adding scss-lint in a test phase -->
                            <!-- <goal>scss-lint</goal> -->
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <useCompass>true</useCompass>
                    <resources>
                        <resource>
                            <source>
                                <directory>${basedir}/src/main/sass</directory>
                                <includes>
                                    <include>*.scss</include>
                                </includes>
                                <excludes />
                            </source>
                            <!--
                             NOTE: The output needs to be in a location that is monitored by spring-boot:run
                             in order to make changes visible. For that reason, it cannot be under target/, where
                             it would naturally belong. In order to avoid adding this directory to revision control,
                             it has been explicitly excluded via .gitignore.
                            -->
                            <destination>${basedir}/src/main/resources/static/css</destination>
                        </resource>
                    </resources>
                    <sassOptions>
                        <style>:compressed</style>
                    </sassOptions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${lib.maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-environment</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <fail>true</fail>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${min.maven.version},)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[${min.java.version},)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <fail>true</fail>
                            <rules>
                                <bannedDependencies>
                                    <searchTransitive>true</searchTransitive>
                                    <excludes>
                                        <exclude>commons-logging:*</exclude>
                                        <exclude>log4j:*</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${lib.spring-boot.version}</version>
                <configuration>
                    <jvmArguments>
                        -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${live-server.debug-port} -Dport=${live-server.http-port} -Dspring.profiles.active=${live-server.profiles}
                    </jvmArguments>
                    <outputDirectory>${project.build.directory}/</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>ro.isdc.wro4j</groupId>
                <artifactId>wro4j-maven-plugin</artifactId>
                <version>${lib.wro4j-maven-plugin.version}</version>
                <configuration>
                    <minimize>true</minimize>
                    <contextFolder>${basedir}/src/main/resources/static</contextFolder>
                    <jsDestinationFolder>${project.build.directory}/classes/static/js</jsDestinationFolder>
                    <wroFile>${basedir}/src/main/config/wro.xml</wroFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
